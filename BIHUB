-- üåê ‡πÉ‡∏ä‡πâ getgenv ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≤‡∏°‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏î‡πâ
getgenv().MacroData = {}
getgenv().SelectedProfile = "Default"

local HttpService = game:GetService("HttpService")

-- üîß ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
function RecordAction(action, data)
    local entry = {
        time = tick(),
        action = action,
        data = data
    }
    table.insert(MacroData, entry)
end

-- ‚ñ∂Ô∏è ‡πÄ‡∏•‡πà‡∏ô Macro
function PlayMacro(speed)
    if #MacroData == 0 then return end
    local t0 = MacroData[1].time
    for _, act in ipairs(MacroData) do
        local delayTime = (act.time - t0)
        if speed == "Fast" then delayTime = delayTime / 2 end
        task.delay(delayTime, function()
            print("üîÅ", act.action, act.data)
            -- TODO: ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ç‡∏≠‡∏á ASTDX ‡∏à‡∏£‡∏¥‡∏á ‡πÄ‡∏ä‡πà‡∏ô ‡∏ß‡∏≤‡∏á‡∏¢‡∏π‡∏ô‡∏¥‡∏ï/‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î
        end)
    end
end

-- üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ï‡∏≤‡∏°‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
function SaveProfile(name)
    if not writefile then return warn("‚ùå Executor ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö writefile") end
    writefile(name..".json", HttpService:JSONEncode(MacroData))
    print("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå:", name)
end

-- üìÇ ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
function LoadProfile(name)
    if not readfile then return warn("‚ùå Executor ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö readfile") end
    local data = readfile(name..".json")
    MacroData = HttpService:JSONDecode(data)
    SelectedProfile = name
    print("‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå:", name)
end

-- ‚ùå ‡∏•‡∏ö‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
function DeleteProfile(name)
    if not isfile or not delfile then return warn("‚ùå Executor ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå") end
    if isfile(name..".json") then
        delfile(name..".json")
        print("üóëÔ∏è ‡∏•‡∏ö‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå:", name)
    end
end
