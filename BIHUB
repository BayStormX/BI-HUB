-- ‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö GUI ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡πà‡∏ô Macro ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå JSON ‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ
-- ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å macro ‡πÅ‡∏•‡πâ‡∏ß‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏ö‡∏ö‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå

getgenv().MacroData = {}
getgenv().SelectedProfile = "Default"

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

-- üì¶ ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "MacroGui"
ScreenGui.ResetOnSpawn = false
if syn and syn.protect_gui then syn.protect_gui(ScreenGui) end
ScreenGui.Parent = (gethui and gethui()) or game:GetService("CoreGui")

local Frame = Instance.new("Frame")
Frame.Parent = ScreenGui
Frame.Position = UDim2.new(0, 20, 0, 150)
Frame.Size = UDim2.new(0, 220, 0, 460)
Frame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Draggable = true

-- üì¢ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
local Notify = Instance.new("TextLabel")
Notify.Parent = ScreenGui
Notify.Size = UDim2.new(0, 300, 0, 30)
Notify.Position = UDim2.new(0, 10, 1, -40)
Notify.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Notify.BackgroundTransparency = 0.3
Notify.TextColor3 = Color3.new(1, 1, 1)
Notify.Font = Enum.Font.SourceSansBold
Notify.TextSize = 18
Notify.Text = ""
Notify.Visible = false

function ShowNotify(text)
    Notify.Text = text
    Notify.Visible = true
    task.delay(2, function()
        Notify.Visible = false
    end)
end

-- üß© ‡∏õ‡∏∏‡πà‡∏° GUI
local function makeBtn(name, text, y)
    local btn = Instance.new("TextButton")
    btn.Name = name
    btn.Text = text
    btn.Size = UDim2.new(0, 200, 0, 30)
    btn.Position = UDim2.new(0, 10, 0, y)
    btn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    btn.TextColor3 = Color3.new(1, 1, 1)
    btn.Font = Enum.Font.SourceSans
    btn.TextSize = 18
    btn.Parent = Frame
    return btn
end

local RecordBtn = makeBtn("RecordBtn", "üî¥ Record", 10)
local PlayBtn = makeBtn("PlayBtn", "‚ñ∂Ô∏è Play", 50)
local SaveBtn = makeBtn("SaveBtn", "üíæ Save", 90)
local LoadBtn = makeBtn("LoadBtn", "üìÇ Load", 130)

local ProfileBox = Instance.new("TextBox")
ProfileBox.Parent = Frame
ProfileBox.Size = UDim2.new(0, 200, 0, 30)
ProfileBox.Position = UDim2.new(0, 10, 0, 170)
ProfileBox.PlaceholderText = "‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ .json)"
ProfileBox.Text = ""
ProfileBox.TextColor3 = Color3.new(1, 1, 1)
ProfileBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
ProfileBox.Font = Enum.Font.SourceSans
ProfileBox.TextSize = 16

-- üîß ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
local isRecording = false
function RecordAction(action, extra)
    if not isRecording then return end
    local entry = {
        time = tick(),
        action = action
    }
    for k, v in pairs(extra) do entry[k] = v end
    if action == "UNIT_PLACE" and not entry.unitName then
        local target = Mouse.Target
        entry.unitName = (target and target.Parent and target.Parent.Name) or "UnknownUnit"
    end
    table.insert(getgenv().MacroData, entry)
end

-- ‚ñ∂Ô∏è ‡πÄ‡∏•‡πà‡∏ô Macro
function PlayMacro()
    local data = getgenv().MacroData
    if not data or #data == 0 then
        ShowNotify("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡πÄ‡∏•‡πà‡∏ô")
        return
    end
    local start = data[1].time
    for _, a in ipairs(data) do
        local delayTime = a.time - start
        task.delay(delayTime, function()
            if a.action == "UNIT_PLACE" then
                print("üì¶ ‡∏ß‡∏≤‡∏á‡∏¢‡∏π‡∏ô‡∏¥‡∏ï:", a.unitName, "‚Üí", a.Position)
            elseif a.action == "OnUpgradeClicked" then
                print("‚¨ÜÔ∏è ‡∏≠‡∏±‡∏õ‡πÄ‡∏Å‡∏£‡∏î index:", a.unitIndex)
            elseif a.action == "OnSpecialClick" then
                print("‚ö° ‡∏™‡∏Å‡∏¥‡∏• index:", a.unitIndex, a.data1)
            end
        end)
    end
end

-- üíæ Save / Load
function SaveProfile(name)
    if not writefile then return ShowNotify("‚ùå writefile ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö") end
    writefile(name..".json", HttpService:JSONEncode(getgenv().MacroData))
    ShowNotify("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡πâ‡∏ß: "..name)
end

function LoadProfile(name)
    if not readfile then return ShowNotify("‚ùå readfile ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö") end
    if not isfile(name..".json") then return ShowNotify("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå") end
    local content = readfile(name..".json")
    getgenv().MacroData = HttpService:JSONDecode(content)
    ShowNotify("üìÇ ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: "..name)
end

-- üéØ ‡∏õ‡∏∏‡πà‡∏°
RecordBtn.MouseButton1Click:Connect(function()
    isRecording = not isRecording
    RecordBtn.Text = isRecording and "‚è∫Ô∏è Recording..." or "üî¥ Record"
    if isRecording then
        getgenv().MacroData = {}
        ShowNotify("üé• ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏≠‡∏±‡∏î‡∏°‡∏≤‡πÇ‡∏Ñ‡∏£")
    else
        local name = ProfileBox.Text ~= "" and ProfileBox.Text or "macro_saved"
        SaveProfile(name)
        ShowNotify("üíæ ‡∏≠‡∏±‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡πâ‡∏ß")
    end
end)

PlayBtn.MouseButton1Click:Connect(function()
    local name = ProfileBox.Text ~= "" and ProfileBox.Text or "macro_saved"
    LoadProfile(name)
    PlayMacro()
    ShowNotify("‚ñ∂Ô∏è ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô Macro...")
end)

SaveBtn.MouseButton1Click:Connect(function()
    local name = ProfileBox.Text ~= "" and ProfileBox.Text or "macro_saved"
    SaveProfile(name)
end)

LoadBtn.MouseButton1Click:Connect(function()
    local name = ProfileBox.Text ~= "" and ProfileBox.Text or "macro_saved"
    LoadProfile(name)
end)

-- üìå ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ß‡∏≤‡∏á‡∏¢‡∏π‡∏ô‡∏¥‡∏ï
Mouse.Button1Down:Connect(function()
    if isRecording then
        local pos = tostring(Mouse.Hit.Position)
        RecordAction("UNIT_PLACE", { Position = pos })
    end
end)
